services:

  sensor-data-service:
    build:
      context: ./sensor-data-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      spring.kafka.bootstrap-servers: kafka:9092
    ports:
      - "8091-8100:8080"
    depends_on:
      - kafka
      - influxdb
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure

  sim-service:
    build:
      context: ./sim-service
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      spring.datasource.url: jdbc:postgresql://postgres:5432/database
      spring.datasource.username: admin
      spring.datasource.password: admin
    ports:
      - "8070-8079:8080"
    depends_on:
      - postgres
      - redis
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=database'
      - 'POSTGRES_PASSWORD=admin'
      - 'POSTGRES_USER=admin'
    ports:
      - '5432'
  redis:
    image: 'redis:latest'
    ports:
      - '6379'
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - sim-service
    ports:
      - 8080:8080

  influxdb:
    image: influxdb:latest
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin1234
      - DOCKER_INFLUXDB_INIT_ORG=org
      - DOCKER_INFLUXDB_INIT_BUCKET=bucket
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=token
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin1234
  chronograf:
    image: chronograf:latest
    ports:
      - '127.0.0.1:8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=admin
      - INFLUXDB_PASSWORD=admin1234
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH__FILE=/etc/grafana/provisioning/dashboards/home

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  influxdb-storage:
  chronograf-storage:
  grafana-storage: